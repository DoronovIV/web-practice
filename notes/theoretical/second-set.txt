	List of the topics:

-- CSS box model;
-- Element positioning;
-- Element sizes (margin, border, padding, width, height);
-- Box sizing;
-- Different positioning types and their use;
-- Z-index;
-- Static, absolute, fixed, relative, sticky.

	. Of CSS box model (margin, border, padding, content)

The term itself represents the way of layout that features four main design elements nested into each other. From outer-to-inner: 'Margin', 'Border', 'Padding', 'Content'.

Since I've been using them for quite a while now, I have a basic understanding of what they really are. Therefore, I will only try to specify the most non-obvious features that they might have specifically in context of HTML and CSS.

-- Firstly: width and height properties only affect the content area itself. To calculate the full size of the element, one shoud add padding, border and margin. The total width and height are calculated by adding the content width/height to all respective outer elements values. It's obvious in this case.

Surprisingly, there is not much to say of this specific topic.

	. Of Element positioning (static, relative, absolute, etc)

A property that specifies the exact coordinates of the element being rendered on the page. There are four main position types:

-- Static, the default one, does not take any affect from the left, top, right, bottom and z-index values. The element is positioned normally.
-- Relative one takes concern to the LTRBZ values, that take their effect based on the previous element on the page. By default, the z-index is in the stacking mode, meaning, the objects will flow on top one another.
-- Sticky: the element will move according to the nearest ancestor scrolling one, when the scroll tries to hide it, to stay visible.
-- Absolute is applying LTRBZ values to the edges of the element's containing block.
-- Fixed is almost the same, only the element's containing block is rather the viewport itself (unless any ancestor has 'transform', 'perspective' or 'filter' property specified).

	. Of Box sizing (width and height override)

This feature provides an ability to override the total element size.
There are two values specific for this property: content-box and border-box. They are pretty self-explanatory.

	. Of Z-index (element overlapping)

Tis a property that sets an overlapping priority to the element. May be set either by an 'auto' or by <integer> value. The priority scales proportionally.
